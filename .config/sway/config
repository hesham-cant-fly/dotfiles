# Mod key
set $mod Mod4

# Window fonts
font pango:monospace 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
# exec --no-startup-id /usr/lib/xdg-desktop-portal -r
# exec --no-startup-id dex --autostart --environment sway
# exec --no-startup-id systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
# exec --no-startup-id dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
# exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
# exec hash dbus-update-activation-environment 2>/dev/null && \
#      dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

set $foreground "#ECDFCC"
set $background "#3C3D37"

#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>#client.<class>         <border>  <background>    <text>      <indicator>   <child_border>
client.focused          "#697565" "#697565"       "#ECDFCC"       "#000000"     "#697565"
client.focused_inactive "#23242a" "$background"   "$foreground"   "#000000"     "#697565"
client.unfocused        "#23242a" "$background"   "$foreground"   "$foreground" "#2c2c2c"

# UI
default_border pixel 2
default_floating_border pixel 2
gaps inner 10

# Window Assign
for_window {
    [title="emacs-run-launcher"] floating enable
    [app_id="com.discordapp.Discord"] move to $ws2
}

exec swaync
exec com.discordapp.Discord
exec swww-daemon
exec autotiling-rs
exec swayidle -w \
    timeout 600 'swaylock -f -i $lockscreenbg' \
    timeout 900 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -f -i $lockscreenbg'

exec_always killall swaybg
exec_always swaybg -m fill -i ~/Pictures/Wallpaper/cool-purple-bg.jpg

# Lock the screen
bindsym $mod+Shift+x exec "swaylock -f -i $lockscreenbg"
bindsym $mod+Shift+n exec swaync-client -t -sw

exec --no-startup-id nm-applet

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
floating_modifier $mod
tiling_drag enable

# start a terminal
bindsym $mod+Return exec kitty

bindsym $mod+m exec emacsclient -c -a "emacs -c"
bindsym $mod+Shift+Return exec thunar

# kill focused window
bindsym $mod+Shift+q kill

# start firefox
bindsym $mod+b exec firefox

bindsym $mod+d exec "rofi -modi drun,run -show drun"
# bindsym $mod+d exec "emacsclient -cF '((visibility . nil))' -e '(emacs-counsel-launcher)'"

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+p floating toggle

# change focus between tiling / floating windows
bindsym $mod+p focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# reload the configuration file
bindsym $mod+Shift+c reload
# restart sway inplace (preserves your layout/session, can be used to upgrade sway)
bindsym $mod+Shift+r restart
bindsym $mod+Shift+e exec "swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your wayland session.' -B 'Yes, exit sway' 'swaymsg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

include ~/.config/sway/config.d/*


